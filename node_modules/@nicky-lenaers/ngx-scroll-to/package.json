{
  "_from": "@nicky-lenaers/ngx-scroll-to",
  "_id": "@nicky-lenaers/ngx-scroll-to@1.0.0",
  "_inBundle": false,
  "_integrity": "sha512-IBKmt9D8gkntSwwQyAWCtOY552JLWcwTDlKOduEF6h8SYfpc1eSJu65rz8zHpur2MRZeLCGaIV+woBLpGYk8YQ==",
  "_location": "/@nicky-lenaers/ngx-scroll-to",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "@nicky-lenaers%2fngx-scroll-to",
    "fetchSpec": "latest",
    "name": "@nicky-lenaers/ngx-scroll-to",
    "raw": "@nicky-lenaers/ngx-scroll-to",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "scope": "@nicky-lenaers",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/@nicky-lenaers/ngx-scroll-to/-/ngx-scroll-to-1.0.0.tgz",
  "_shasum": "2afdc03e5b3218bbb5e19ec69fb1e7f7c8eb83dc",
  "_spec": "@nicky-lenaers/ngx-scroll-to",
  "_where": "D:\\app\\XamPP\\htdocs\\maxshop-angular",
  "author": {
    "email": "nicky@newgameplus.online",
    "name": "Nicky Lenaers"
  },
  "bugs": {
    "url": "https://github.com/nicky-lenaers/ngx-scroll-to/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "tslib": "^1.9.0"
  },
  "deprecated": false,
  "description": "A simple Angular 4+ plugin enabling you to smooth scroll to any element on your page and enhance scroll-based features in your app.",
  "devDependencies": {
    "@angular-devkit/build-angular": "^0.7.0-beta.1",
    "@angular/animations": "^6.0.0",
    "@angular/cli": "^6.0.0",
    "@angular/common": "^6.0.0",
    "@angular/compiler": "^6.0.0",
    "@angular/compiler-cli": "^6.0.0",
    "@angular/core": "^6.0.0",
    "@angular/forms": "^6.0.0",
    "@angular/http": "^6.0.0",
    "@angular/language-service": "^6.0.0",
    "@angular/platform-browser": "^6.0.0",
    "@angular/platform-browser-dynamic": "^6.0.0",
    "@angular/router": "^6.0.0",
    "@commitlint/cli": "^6.2.0",
    "@commitlint/config-angular": "^6.1.3",
    "@types/jasmine": "^2.8.2",
    "@types/jasminewd2": "^2.0.3",
    "@types/node": "^9.4.6",
    "codelyzer": "^4.0.1",
    "conventional-changelog-cli": "^1.3.4",
    "conventional-github-releaser": "^2.0.2",
    "core-js": "^2.4.1",
    "husky": "^0.14.3",
    "jasmine-core": "^2.8.0",
    "jasmine-reporters": "^2.2.1",
    "jasmine-spec-reporter": "^4.2.1",
    "karma": "~1.7.0",
    "karma-chrome-launcher": "^2.2.0",
    "karma-cli": "~1.0.1",
    "karma-coverage-istanbul-reporter": "^1.2.1",
    "karma-jasmine": "~1.1.0",
    "karma-jasmine-html-reporter": "^0.2.2",
    "ng-packagr": "^3.0.1",
    "protractor": "^5.2.0",
    "rxjs": "^6.1.0",
    "ts-node": "^4.1.0",
    "tsickle": "^0.29.0",
    "tslint": "^5.8.0",
    "typescript": "^2.4.2",
    "zone.js": "^0.8.26"
  },
  "engines": {
    "node": ">=8.0.0",
    "npm": ">=5.0.0"
  },
  "es2015": "fesm2015/nicky-lenaers-ngx-scroll-to.js",
  "esm2015": "esm2015/nicky-lenaers-ngx-scroll-to.js",
  "esm5": "esm5/nicky-lenaers-ngx-scroll-to.js",
  "fesm2015": "fesm2015/nicky-lenaers-ngx-scroll-to.js",
  "fesm5": "fesm5/nicky-lenaers-ngx-scroll-to.js",
  "homepage": "https://github.com/nicky-lenaers/ngx-scroll-to#readme",
  "keywords": [
    "angular",
    "angular 2",
    "angular 4",
    "angular 5",
    "angular 6",
    "angular2",
    "angular4",
    "angular5",
    "angular6",
    "ng",
    "ngx",
    "ngx-scroll-to",
    "scroll",
    "scroll-to",
    "scrolling",
    "smooth",
    "smooth scroll",
    "smooth scrolling",
    "smooth-scroll",
    "smooth-scrolling"
  ],
  "license": "MIT",
  "main": "bundles/nicky-lenaers-ngx-scroll-to.umd.js",
  "metadata": "nicky-lenaers-ngx-scroll-to.metadata.json",
  "module": "fesm5/nicky-lenaers-ngx-scroll-to.js",
  "name": "@nicky-lenaers/ngx-scroll-to",
  "optionalDependencies": {},
  "peerDependencies": {
    "@angular/core": "^6.0.0",
    "rxjs": "^6.1.0",
    "zone.js": "^0.8.26"
  },
  "private": false,
  "readme": "<div align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/2785350/28428760-ae908006-6d7a-11e7-92ec-174bec80740e.png\">\n</div>\n<div align=\"center\">\n  <h1>ngx-scroll-to</h1>\n  <p>\n    A simple Angular 4+ plugin enabling you to smooth scroll to any element on your page and enhance scroll-based features in your app. Works for <strong>Angular 4+</strong>, both <strong>AoT</strong> and <strong>SSR</strong>. No dependencies.\n  </p>\n  <strong>Support for Angular 6!</strong>\n  <br/>\n  <br/>\n</div>\n\n<table>\n  <tr>\n    <th align=\"left\">Subject</th>\n    <th align=\"left\">Type</th>\n    <th align=\"left\">Badge</th>\n  </tr>\n  <tr>\n    <th align=\"left\">CI / CD</th>\n    <td align=\"left\">Circle CI</td>\n    <td align=\"left\">\n      <a href=\"https://circleci.com/gh/nicky-lenaers/ngx-scroll-to\" target=\"_blank\">\n        <img src=\"https://img.shields.io/circleci/project/github/nicky-lenaers/ngx-scroll-to/master.svg?style=flat-square\" alt=\"Circle CI\">\n      </a>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"left\">Releases</th>\n    <td align=\"left\">GitHub</td>\n    <td align=\"left\">\n      <a href=\"https://github.com/nicky-lenaers/ngx-scroll-to/releases\" target=\"_blank\">\n        <img src=\"https://img.shields.io/github/release/nicky-lenaers/ngx-scroll-to.svg?style=flat-square\" alt=\"GitHub Release\">\n      </a>\n    </td>\n  </tr>\n  <tr>\n    <td>&nbsp;</td>\n    <td>NPM</td>\n    <td align=\"left\">\n      <a href=\"https://www.npmjs.com/package/@nicky-lenaers/ngx-scroll-to\" target=\"_blank\">\n        <img src=\"https://img.shields.io/npm/v/@nicky-lenaers/ngx-scroll-to.svg?style=flat-square\" alt=\"NPM Release\">\n      </a>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"left\" valign=\"top\">Dependencies</th>\n    <td align=\"left\">Production</td>\n    <td align=\"left\">\n      <a href=\"https://david-dm.org/nicky-lenaers/ngx-scroll-to\" target=\"_blank\">\n        <img src=\"https://img.shields.io/david/nicky-lenaers/ngx-scroll-to.svg?style=flat-square\" alt=\"Production Dependencies\">\n      </a>\n    </td>\n  </tr>\n  <tr>\n    <td>&nbsp;</td>\n    <td align=\"left\">Peer</td>\n    <td align=\"left\">\n      <a href=\"https://david-dm.org/nicky-lenaers/ngx-scroll-to?type=peer\" target=\"_blank\">\n        <img src=\"https://img.shields.io/david/peer/nicky-lenaers/ngx-scroll-to.svg?style=flat-square\" alt=\"Peer Dependencies\">\n      </a>\n    </td>\n  </tr>\n  <tr>\n    <td>&nbsp;</td>\n    <td align=\"left\">Development</td>\n    <td align=\"left\">\n      <a href=\"https://david-dm.org/nicky-lenaers/ngx-scroll-to?type=dev\" target=\"_blank\">\n        <img src=\"https://img.shields.io/david/dev/nicky-lenaers/ngx-scroll-to.svg?style=flat-square\" alt=\"Development Dependencies\">\n      </a>\n    </td>\n  </tr>\n  <tr>\n    <td>&nbsp;</td>\n    <td align=\"left\">Optional</td>\n    <td align=\"left\">\n      <a href=\"https://david-dm.org/nicky-lenaers/ngx-scroll-to?type=optional\" target=\"_blank\">\n        <img src=\"https://img.shields.io/david/optional/nicky-lenaers/ngx-scroll-to.svg?style=flat-square\" alt=\"Optional Dependencies\">\n      </a>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"left\" valign=\"top\">Downloads</th>\n    <td>NPM</td>\n    <td>\n      <a href=\"https://npmjs.org/@nicky-lenaers/ngx-scroll-to\" target=\"_blank\">\n        <img src=\"https://img.shields.io/npm/dm/%40nicky-lenaers%2Fngx-scroll-to.svg?style=flat-square\" alt=\"NPM Monthly Downloads\">\n      </a>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"left\" valign=\"top\">License</th>\n    <td>MIT</td>\n    <td>\n      <a href=\"https://github.com/nicky-lenaers/ngx-scroll-to/blob/master/LICENSE\" target=\"_blank\">\n        <img src=\"https://img.shields.io/npm/l/@nicky-lenaers/ngx-scroll-to.svg?style=flat-square\" alt=\"License\">\n      </a>\n    </td>\n  </tr>\n</table>\n\nCurrent Angular Version\n\n[![npm version](https://img.shields.io/npm/v/%40angular%2Fcore.svg?style=flat-square)](https://www.npmjs.com/~angular)  \n\n## Installation\nAngular 6\n```sh\n$ npm install @nicky-lenaers/ngx-scroll-to\n```\nAngular <= 5.x\n```sh\n$ npm install @nicky-lenaers/ngx-scroll-to@\"<1\"\n```\n\n## Setup\n```js\n...\nimport { ScrollToModule } from '@nicky-lenaers/ngx-scroll-to';\n...\n\n@NgModule({\n  imports: [\n    ...\n    ScrollToModule.forRoot()\n  ],\n  ...\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n```\n\n## Basic Usage - Directive to Target\n**my.component.html**\n\n```html\n<!-- Works for including '#' -->\n<button [ngx-scroll-to]=\"'#destination'\">Go to destination</button>\n\n<!-- Works for excluding '#' -->\n<button [ngx-scroll-to]=\"'destination'\">Go to destination</button>\n\n<div id=\"destination\">\n  You've reached your destination.\n</div>\n```\n\n## Basic Usage - Directive to Offset Only\nBesides scrolling to a specific element, it is also possible to scroll a given offset only. This can be achieved by an empty target and an offset:\n\n**my.component.html**\n\n```html\n<button \n  ngx-scroll-to \n  [ngx-scroll-to-offset]=\"200\">\n  Go down 200 pixels\n</button>\n```\n\n## Basic Usage - Service to Target\n**my.component.html**\n```html\n<button (click)=\"triggerScrollTo()\">Go to destination</button>\n\n<div id=\"destination\">\n  You've reached your destination.\n</div>\n```\n\n**my.service.ts**\n\n```js\nimport { Injectable } from '@angular/core';\nimport { ScrollToService, ScrollToConfigOptions } from '@nicky-lenaers/ngx-scroll-to';\n\n@Injectable()\nexport class MyService {\n\n  constructor(private _scrollToService: ScrollToService) { }\n\n  public triggerScrollTo() {\n    \n    const config: ScrollToConfigOptions = {\n      target: 'destination'\n    };\n\n    this._scrollToService.scrollTo(config);\n  }\n}\n```\n\n## Basic Usage - Service to Offset Only\nJust like with the Directive, the Service can be used to scroll to an offset only instead of a given target element:\n\n**my.component.html**\n```html\n<button (click)=\"triggerScrollToOffsetOnly(200)\">Go down 200 pixels</button>\n```\n\n**my.service.ts**\n\n```js\nimport { Injectable } from '@angular/core';\nimport { ScrollToService, ScrollToConfigOptions } from '@nicky-lenaers/ngx-scroll-to';\n\n@Injectable()\nexport class MyService {\n\n  constructor(private _scrollToService: ScrollToService) { }\n\n  public triggerScrollToOffsetOnly(offset: number = 0) {\n    \n    const config: ScrollToConfigOptions = {\n      offset\n    };\n\n    this._scrollToService.scrollTo(config);\n  }\n}\n```\n\n## Advanced Usage - Directive\n**my.component.ts**\n```js\nimport { ScrollToAnimationEasing, ScrollToEvent, ScrollToOffsetMap } from '@nicky-lenaers/ngx-scroll-to';\n\n@Component({\n  selector: 'my-component'\n  templateUrl: './my.component.html'\n})\nexport class MyComponent {\n\n  public ngxScrollToDestination: string;\n  public ngxScrollToEvent: ScrollToEvent;\n  public ngxScrollToDuration: number;\n  public ngxScrollToEasing: ScrollToAnimationEasing;\n  public ngxScrollToOffset: number;\n  public ngxScrollToOffsetMap: ScrollToOffsetMap;\n\n  constructor() {\n\n    this.ngxScrollToDestination = 'destination-1';\n    this.ngxScrollToEvent = 'mouseenter';\n    this.ngxScrollToDuration = 1500;\n    this.ngxScrollToEasing = 'easeOutElastic';\n    this.ngxScrollToOffset = 300;\n    this.ngxScrollToOffsetMap = new Map();\n    this.ngxScrollToOffsetMap\n      .set(480, 100)\n      .set(768, 200)\n      .set(1240, 300)\n      .set(1920, 400)\n\n  }\n\n  public toggleDestination() {\n    this.ngxScrollToDestination = this.ngxScrollToDestination === 'destination-1' ? 'destination-2' : 'destination-1';\n  }\n}\n```\n\n\n**my.component.html**\n```html\n<button (click)=\"toggleDestination()\">Toggle Destination</button>\n\n<button \n  [ngx-scroll-to]=\"ngxScrollToDestination\"\n  [ngx-scroll-to-event]=\"ngxScrollToEvent\"\n  [ngx-scroll-to-duration]=\"ngxScrollToDuration\"\n  [ngx-scroll-to-easing]=\"ngxScrollToEasing\"\n  [ngx-scroll-to-offset]=\"ngxScrollToOffset\"\n  [ngx-scroll-to-offset-map]=\"ngxScrollToOffsetMap\">\n  Go to destination\n</button>\n\n<div id=\"destination-1\">\n  You've reached your first destination\n</div>\n\n<div id=\"destination-2\">\n  You've reached your second destination\n</div>\n```\n\n## Advanced Usage - Service\n**my.component.html**\n```html\n<button (click)=\"triggerScrollTo()\">Go to destination</button>\n\n<div id=\"custom-container\">\n  <div id=\"destination\">\n    You've reached your destination.\n  </div>\n</div>\n```\n\n**my.service.ts**\n\n```js\nimport { Injectable } from '@angular/core';\nimport { ScrollToService, ScrollToConfigOptions } from '@nicky-lenaers/ngx-scroll-to';\n\n@Injectable()\nexport class MyService {\n\n  constructor(private _scrollToService: ScrollToService) { }\n\n  public triggerScrollTo() {\n    \n    /**\n     * @see NOTE:1\n     */\n    const config: ScrollToConfigOptions = {\n      container: 'custom-container',\n      target: 'destination',\n      duration: 650,\n      easing: 'easeOutElastic',\n      offset: 20\n    };\n\n    this._scrollToService.scrollTo(config);\n  }\n}\n```\n**NOTE:1**\n\n*The `container` property is an optional property. By default, `ngx-scroll-to` searches for the first scrollable parent `HTMLElement` with respect to the specified `target`. This should suffice in most cases. However, if multiple scrollable parents reside in the DOM tree, you have the degree of freedom the specify a specific container by using the `container` property, as used in the above example.*\n\n## Directive Attributes Map\n<table>\n  <tr>\n    <th align=\"left\">Options</th>\n    <th align=\"left\">Type</th>\n    <th align=\"left\">Default</th>\n  </tr>\n  <tr>\n    <td><a href=\"#ngx-scroll-to-details\">ngx-scroll-to</a></td>\n    <td><code>string</code> | <code>number</code> | <code>ElementRef</code> | <code>HTMLElement</code></td>\n    <td><code>''</code></td>\n  </tr>\n  <tr>\n    <td><a href=\"#ngx-scroll-to-event-details\">ngx-scroll-to-event</a></td>\n    <td><code>ScrollToEvent</code></td>\n    <td><code>click</code></td>\n  </tr>\n  <tr>\n    <td><a href=\"#ngx-scroll-to-duration-details\">ngx-scroll-to-duration</a></td>\n    <td><code>number</code></td>\n    <td><code>650</code></td>\n  </tr>\n  <tr>\n    <td><a href=\"#ngx-scroll-to-easing-details\">ngx-scroll-to-easing</a></td>\n    <td><code>ScrollToAnimationEasing</code></td>\n    <td><code>easeInOutQuad</code></td>\n  </tr>\n  <tr>\n    <td><a href=\"#ngx-scroll-to-offset-details\">ngx-scroll-to-offset</a></td>\n    <td><code>number</code></td>\n    <td><code>0</code></td>\n  </tr>\n  <tr>\n    <td><a href=\"#ngx-scroll-to-offset-map-details\">ngx-scroll-to-offset-map</a></td>\n    <td><code>ScrollToOffsetMap</code></td>\n    <td><code>new Map()</code></td>\n  </tr>\n</table>\n\n## Error Handling\nIn some occasions, one might misspell a target or container selector string. Even though `ngx-scoll-to` will not be able to initiate the scrolling animation, you can catch the internally generated error and handle it as you please on the `Observable` chain returned from the `scrollTo` method.\n\n**faulty.service.ts**\n```js\nimport { Injectable } from '@angular/core';\nimport { ScrollToService } from '@nicky-lenaers/ngx-scroll-to';\n\n@Injectable()\nexport class FaultyService {\n\n  constructor(private _scrollToService: ScrollToService) { }\n\n  public triggerScrollTo() {\n    \n    this._scrollToService\n      .scrollTo({\n        target: 'faulty-id'\n      })\n      .subscribe(\n        value => { console.log(value) },\n        err => console.error(err) // Error is caught and logged instead of thrown\n      );\n  }\n}\n```\n\n## Directive Attribute Map Details\n#### <a name=\"ngx-scroll-to-details\"></a>`[ngx-scroll-to]`\nThis value specifies the ID of the HTML Element to scroll to. Note the outer double quotes `\"\"` and the inner single quotes `''` in the above example(s). This enables you to dynamically set the string value based on a class property of your Component.\n\n#### <a name=\"ngx-scroll-to-event-details\"></a>`[ngx-scroll-to-event]`\nThis value controls to event on which to trigger the scroll animation. Allowed values are:\n- `click`\n- `mouseenter`\n- `mouseover`\n- `mousedown`\n- `mouseup`\n- `dblclick`\n- `contextmenu`\n- `wheel`\n- `mouseleave`\n- `mouseout`\n\n#### <a name=\"ngx-scroll-to-duration-details\"></a>`[ngx-scroll-to-duration]`\nThis value controls to duration of your scroll animation. Note that this value is in milliseconds.\n\n#### <a name=\"ngx-scroll-to-easing-details\"></a>`[ngx-scroll-to-easing]`\nThis value controls a named easing logic function to control your animation easing. Allowed values are:\n- `easeInQuad`\n- `easeOutQuad`\n- `easeInOutQuad`\n- `easeInCubic`\n- `easeOutCubic`\n- `easeInOutCubic`\n- `easeInQuart`\n- `easeOutQuart`\n- `easeInOutQuart`\n- `easeInQuint`\n- `easeOutQuint`\n- `easeInOutQuint`\n- `easeOutElastic`\n\n#### <a name=\"ngx-scroll-to-offset-details\"></a>`[ngx-scroll-to-offset]`\nThis value controls the offset with respect to the top of the destination HTML element. Note that this value is in pixels.\n\n#### <a name=\"ngx-scroll-to-offset-map-details\"></a>`[ngx-scroll-to-offset-map]`\nThis value allows you to control dynamic offsets based on the width of the device screen. The Map get's iterated over internally in a sequential fashion, meaning you need to supply key values in the order from low to high. The `key` of the `Map` defines the width treshold. The `value` of the `Map` defines the offset. Note that this value is in pixels.\n\n# Contributing\nPlease see [Contributing Guidelines](.github/CONTRIBUTING.md).\n\n# Code of Conduct\nPlease see [Code of Conduct](.github/CODE_OF_CONDUCT.md).\n\n# License\n [MIT](/LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nicky-lenaers/ngx-scroll-to.git"
  },
  "sideEffects": false,
  "typings": "nicky-lenaers-ngx-scroll-to.d.ts",
  "version": "1.0.0"
}
